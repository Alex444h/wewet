name: RDP Setup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-rdp:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

      - name: Extract ngrok
        run: Expand-Archive -Path ngrok.zip -DestinationPath .\ngrok

      - name: Authenticate ngrok
        run: .\ngrok\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable Remote Desktop
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

      - name: Create RDP User
        run: |
          $Password = ConvertTo-SecureString -String "${{ secrets.RDP_PASSWORD }}" -AsPlainText -Force
          if (-Not (Get-LocalUser -Name "runneradmin" -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name "runneradmin" -Password $Password -FullName "RDP User" -Description "User for RDP access" -PasswordNeverExpires
            Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"
          } else {
            Write-Output "Пользователь 'runneradmin' уже существует."
          }
        shell: pwsh

      - name: Start ngrok tunnel
        run: .\ngrok\ngrok.exe tcp 3389 --region eu --log=stdout > ngrok.log &
        shell: pwsh

      - name: Wait for ngrok to initialize
        run: Start-Sleep -Seconds 10
        shell: pwsh

      - name: Get ngrok URL
        id: get_ngrok
        run: |
          $ngrokLog = Get-Content -Path .\ngrok.log -Tail 10
          $tcpUrl = ($ngrokLog | Select-String -Pattern "tcp://").Line -replace "tcp://", ""
          if ($tcpUrl) {
            Write-Output "RDP доступен по адресу: $tcpUrl"
            echo "::set-output name=rdp_url::$tcpUrl"
          } else {
            Write-Error "Не удалось получить URL туннеля ngrok."
          }
        shell: pwsh

      - name: Output ngrok URL
        run: echo "RDP доступен по адресу: ${{ steps.get_ngrok.outputs.rdp_url }}"
        shell: pwsh
